// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.21.6
// source: datax.proto

package datax

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OK
type ModelSpec_FieldType int32

const (
	ModelSpec_UNSPEC ModelSpec_FieldType = 0
	ModelSpec_BOOL   ModelSpec_FieldType = 1
	ModelSpec_INT    ModelSpec_FieldType = 2
	ModelSpec_UINT   ModelSpec_FieldType = 3
	ModelSpec_FLOAT  ModelSpec_FieldType = 4
	ModelSpec_STRING ModelSpec_FieldType = 6
	ModelSpec_BYTES  ModelSpec_FieldType = 7 // Encoded as a base64-encoded `string`
	ModelSpec_ARRAY  ModelSpec_FieldType = 8
	ModelSpec_JSON   ModelSpec_FieldType = 11 // Encoded as a JSON-formatted `string`
	ModelSpec_TERM   ModelSpec_FieldType = 12
)

// Enum value maps for ModelSpec_FieldType.
var (
	ModelSpec_FieldType_name = map[int32]string{
		0:  "UNSPEC",
		1:  "BOOL",
		2:  "INT",
		3:  "UINT",
		4:  "FLOAT",
		6:  "STRING",
		7:  "BYTES",
		8:  "ARRAY",
		11: "JSON",
		12: "TERM",
	}
	ModelSpec_FieldType_value = map[string]int32{
		"UNSPEC": 0,
		"BOOL":   1,
		"INT":    2,
		"UINT":   3,
		"FLOAT":  4,
		"STRING": 6,
		"BYTES":  7,
		"ARRAY":  8,
		"JSON":   11,
		"TERM":   12,
	}
)

func (x ModelSpec_FieldType) Enum() *ModelSpec_FieldType {
	p := new(ModelSpec_FieldType)
	*p = x
	return p
}

func (x ModelSpec_FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelSpec_FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_datax_proto_enumTypes[0].Descriptor()
}

func (ModelSpec_FieldType) Type() protoreflect.EnumType {
	return &file_datax_proto_enumTypes[0]
}

func (x ModelSpec_FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelSpec_FieldType.Descriptor instead.
func (ModelSpec_FieldType) EnumDescriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{0, 0}
}

type DataRead_Filter_Type int32

const (
	DataRead_Filter_UnSpec DataRead_Filter_Type = 0
	DataRead_Filter_AND    DataRead_Filter_Type = 1
	DataRead_Filter_OR     DataRead_Filter_Type = 2
)

// Enum value maps for DataRead_Filter_Type.
var (
	DataRead_Filter_Type_name = map[int32]string{
		0: "UnSpec",
		1: "AND",
		2: "OR",
	}
	DataRead_Filter_Type_value = map[string]int32{
		"UnSpec": 0,
		"AND":    1,
		"OR":     2,
	}
)

func (x DataRead_Filter_Type) Enum() *DataRead_Filter_Type {
	p := new(DataRead_Filter_Type)
	*p = x
	return p
}

func (x DataRead_Filter_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataRead_Filter_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_datax_proto_enumTypes[1].Descriptor()
}

func (DataRead_Filter_Type) Type() protoreflect.EnumType {
	return &file_datax_proto_enumTypes[1]
}

func (x DataRead_Filter_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataRead_Filter_Type.Descriptor instead.
func (DataRead_Filter_Type) EnumDescriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{2, 0, 0}
}

type DataRead_SortFilter_Type int32

const (
	DataRead_SortFilter_UnSpec DataRead_SortFilter_Type = 0
	DataRead_SortFilter_ASC    DataRead_SortFilter_Type = 1
	DataRead_SortFilter_DESC   DataRead_SortFilter_Type = 2
)

// Enum value maps for DataRead_SortFilter_Type.
var (
	DataRead_SortFilter_Type_name = map[int32]string{
		0: "UnSpec",
		1: "ASC",
		2: "DESC",
	}
	DataRead_SortFilter_Type_value = map[string]int32{
		"UnSpec": 0,
		"ASC":    1,
		"DESC":   2,
	}
)

func (x DataRead_SortFilter_Type) Enum() *DataRead_SortFilter_Type {
	p := new(DataRead_SortFilter_Type)
	*p = x
	return p
}

func (x DataRead_SortFilter_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataRead_SortFilter_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_datax_proto_enumTypes[2].Descriptor()
}

func (DataRead_SortFilter_Type) Type() protoreflect.EnumType {
	return &file_datax_proto_enumTypes[2]
}

func (x DataRead_SortFilter_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataRead_SortFilter_Type.Descriptor instead.
func (DataRead_SortFilter_Type) EnumDescriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{2, 1, 0}
}

// backend components
type ModelSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind        string             `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty" toml:"kind,omitempty" yaml:"kind,omitempty"`
	Version     string             `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" yaml:"version,omitempty"`
	Name        string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" yaml:"name,omitempty"` // string description = 4;
	Fields      []*ModelSpec_Field `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty" toml:"fields,omitempty" yaml:"fields,omitempty"`
	DefaultRows []*ModelSpec_Row   `protobuf:"bytes,9,rep,name=default_rows,json=defaultRows,proto3" json:"default_rows,omitempty" toml:"default_rows,omitempty" yaml:"default_rows,omitempty"`
}

func (x *ModelSpec) Reset() {
	*x = ModelSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datax_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelSpec) ProtoMessage() {}

func (x *ModelSpec) ProtoReflect() protoreflect.Message {
	mi := &file_datax_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelSpec.ProtoReflect.Descriptor instead.
func (*ModelSpec) Descriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{0}
}

func (x *ModelSpec) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ModelSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ModelSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelSpec) GetFields() []*ModelSpec_Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ModelSpec) GetDefaultRows() []*ModelSpec_Row {
	if x != nil {
		return x.DefaultRows
	}
	return nil
}

type ModelSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" yaml:"name,omitempty"`
	Items []*ModelSpec `protobuf:"bytes,9,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty" yaml:"items,omitempty"`
}

func (x *ModelSets) Reset() {
	*x = ModelSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datax_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelSets) ProtoMessage() {}

func (x *ModelSets) ProtoReflect() protoreflect.Message {
	mi := &file_datax_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelSets.ProtoReflect.Descriptor instead.
func (*ModelSets) Descriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{1}
}

func (x *ModelSets) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelSets) GetItems() []*ModelSpec {
	if x != nil {
		return x.Items
	}
	return nil
}

// ref
// https://github.com/go-rel/rel/blob/master/query.go
type DataRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model  string                 `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty" toml:"model,omitempty" yaml:"model,omitempty"`
	Fields []string               `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" toml:"fields,omitempty" yaml:"fields,omitempty"`
	Filter *DataRead_Filter       `protobuf:"bytes,4,opt,name=filter,proto3,oneof" json:"filter" toml:"filter" yaml:"filter" json:"filter,omitempty"`
	Sort   []*DataRead_SortFilter `protobuf:"bytes,6,rep,name=sort,proto3" json:"sort,omitempty" toml:"sort,omitempty" yaml:"sort,omitempty"`
	Offset string                 `protobuf:"bytes,7,opt,name=offset,proto3" json:"offset,omitempty" toml:"offset,omitempty" yaml:"offset,omitempty"`
	Limit  uint32                 `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty" toml:"limit,omitempty" yaml:"limit,omitempty"`
}

func (x *DataRead) Reset() {
	*x = DataRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datax_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataRead) ProtoMessage() {}

func (x *DataRead) ProtoReflect() protoreflect.Message {
	mi := &file_datax_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataRead.ProtoReflect.Descriptor instead.
func (*DataRead) Descriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{2}
}

func (x *DataRead) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *DataRead) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DataRead) GetFilter() *DataRead_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DataRead) GetSort() []*DataRead_SortFilter {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *DataRead) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DataRead) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DataWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model  string           `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty" toml:"model,omitempty" yaml:"model,omitempty"`
	Fields []string         `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty" toml:"fields,omitempty" yaml:"fields,omitempty"`
	Values []string         `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty" toml:"values,omitempty" yaml:"values,omitempty"`
	Filter *DataRead_Filter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty" toml:"filter,omitempty" yaml:"filter,omitempty"`
}

func (x *DataWrite) Reset() {
	*x = DataWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datax_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataWrite) ProtoMessage() {}

func (x *DataWrite) ProtoReflect() protoreflect.Message {
	mi := &file_datax_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataWrite.ProtoReflect.Descriptor instead.
func (*DataWrite) Descriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{3}
}

func (x *DataWrite) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *DataWrite) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DataWrite) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *DataWrite) GetFilter() *DataRead_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type DataAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string name = 1;
	Search *DataRead  `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty" toml:"search,omitempty" yaml:"search,omitempty"`
	Insert *DataWrite `protobuf:"bytes,3,opt,name=insert,proto3" json:"insert,omitempty" toml:"insert,omitempty" yaml:"insert,omitempty"`
	Update *DataWrite `protobuf:"bytes,4,opt,name=update,proto3" json:"update,omitempty" toml:"update,omitempty" yaml:"update,omitempty"`
	Upsert *DataWrite `protobuf:"bytes,5,opt,name=upsert,proto3" json:"upsert,omitempty" toml:"upsert,omitempty" yaml:"upsert,omitempty"`
	Delete *DataWrite `protobuf:"bytes,6,opt,name=delete,proto3" json:"delete,omitempty" toml:"delete,omitempty" yaml:"delete,omitempty"`
}

func (x *DataAction) Reset() {
	*x = DataAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datax_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataAction) ProtoMessage() {}

func (x *DataAction) ProtoReflect() protoreflect.Message {
	mi := &file_datax_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataAction.ProtoReflect.Descriptor instead.
func (*DataAction) Descriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{4}
}

func (x *DataAction) GetSearch() *DataRead {
	if x != nil {
		return x.Search
	}
	return nil
}

func (x *DataAction) GetInsert() *DataWrite {
	if x != nil {
		return x.Insert
	}
	return nil
}

func (x *DataAction) GetUpdate() *DataWrite {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *DataAction) GetUpsert() *DataWrite {
	if x != nil {
		return x.Upsert
	}
	return nil
}

func (x *DataAction) GetDelete() *DataWrite {
	if x != nil {
		return x.Delete
	}
	return nil
}

type DataletSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind   string      `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty" toml:"kind,omitempty" yaml:"kind,omitempty"`
	Name   string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" yaml:"name,omitempty"`
	Action *DataAction `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty" toml:"action,omitempty" yaml:"action,omitempty"`
}

func (x *DataletSpec) Reset() {
	*x = DataletSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datax_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataletSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataletSpec) ProtoMessage() {}

func (x *DataletSpec) ProtoReflect() protoreflect.Message {
	mi := &file_datax_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataletSpec.ProtoReflect.Descriptor instead.
func (*DataletSpec) Descriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{5}
}

func (x *DataletSpec) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *DataletSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataletSpec) GetAction() *DataAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type DataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" yaml:"name,omitempty"`
	Spec  *ModelSpec       `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty" toml:"spec,omitempty" yaml:"spec,omitempty"`
	Rows  []*ModelSpec_Row `protobuf:"bytes,9,rep,name=rows,proto3" json:"rows,omitempty" toml:"rows,omitempty" yaml:"rows,omitempty"`
	Error string           `protobuf:"bytes,10,opt,name=error,proto3" json:"error,omitempty" toml:"error,omitempty" yaml:"error,omitempty"`
}

func (x *DataResult) Reset() {
	*x = DataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datax_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataResult) ProtoMessage() {}

func (x *DataResult) ProtoReflect() protoreflect.Message {
	mi := &file_datax_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataResult.ProtoReflect.Descriptor instead.
func (*DataResult) Descriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{6}
}

func (x *DataResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataResult) GetSpec() *ModelSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *DataResult) GetRows() []*ModelSpec_Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *DataResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DataletResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind     string        `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty" toml:"kind,omitempty" yaml:"kind,omitempty"`
	Dataset  *DataResult   `protobuf:"bytes,8,opt,name=dataset,proto3" json:"dataset,omitempty" toml:"dataset,omitempty" yaml:"dataset,omitempty"`
	Datasets []*DataResult `protobuf:"bytes,9,rep,name=datasets,proto3" json:"datasets,omitempty" toml:"datasets,omitempty" yaml:"datasets,omitempty"`
}

func (x *DataletResults) Reset() {
	*x = DataletResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datax_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataletResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataletResults) ProtoMessage() {}

func (x *DataletResults) ProtoReflect() protoreflect.Message {
	mi := &file_datax_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataletResults.ProtoReflect.Descriptor instead.
func (*DataletResults) Descriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{7}
}

func (x *DataletResults) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *DataletResults) GetDataset() *DataResult {
	if x != nil {
		return x.Dataset
	}
	return nil
}

func (x *DataletResults) GetDatasets() []*DataResult {
	if x != nil {
		return x.Datasets
	}
	return nil
}

// OK
type ModelSpec_Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" yaml:"name,omitempty"`
	Type         ModelSpec_FieldType `protobuf:"varint,2,opt,name=type,proto3,enum=valuedig.datax.ModelSpec_FieldType" json:"type,omitempty" toml:"type,omitempty" yaml:"type,omitempty"`
	DefaultValue string              `protobuf:"bytes,3,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty" toml:"default_value,omitempty" yaml:"default_value,omitempty"`
	Length       uint32              `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty" toml:"length,omitempty" yaml:"length,omitempty"`                                     // int, uint
	DecimalSize  []uint32            `protobuf:"varint,5,rep,packed,name=decimal_size,json=decimalSize,proto3" json:"decimal_size,omitempty" toml:"decimal_size,omitempty" yaml:"decimal_size,omitempty"` // [precision, scale]
	TermNs       string              `protobuf:"bytes,6,opt,name=term_ns,json=termNs,proto3" json:"term_ns,omitempty" toml:"term_ns,omitempty" yaml:"term_ns,omitempty"`
}

func (x *ModelSpec_Field) Reset() {
	*x = ModelSpec_Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datax_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelSpec_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelSpec_Field) ProtoMessage() {}

func (x *ModelSpec_Field) ProtoReflect() protoreflect.Message {
	mi := &file_datax_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelSpec_Field.ProtoReflect.Descriptor instead.
func (*ModelSpec_Field) Descriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ModelSpec_Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelSpec_Field) GetType() ModelSpec_FieldType {
	if x != nil {
		return x.Type
	}
	return ModelSpec_UNSPEC
}

func (x *ModelSpec_Field) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *ModelSpec_Field) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *ModelSpec_Field) GetDecimalSize() []uint32 {
	if x != nil {
		return x.DecimalSize
	}
	return nil
}

func (x *ModelSpec_Field) GetTermNs() string {
	if x != nil {
		return x.TermNs
	}
	return ""
}

type ModelSpec_Term struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ns          string `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty" toml:"ns,omitempty" yaml:"ns,omitempty"` // default to `global`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" yaml:"id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" yaml:"name,omitempty"`
	DisplayName string `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty" toml:"display_name,omitempty" yaml:"display_name,omitempty"`
}

func (x *ModelSpec_Term) Reset() {
	*x = ModelSpec_Term{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datax_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelSpec_Term) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelSpec_Term) ProtoMessage() {}

func (x *ModelSpec_Term) ProtoReflect() protoreflect.Message {
	mi := &file_datax_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelSpec_Term.ProtoReflect.Descriptor instead.
func (*ModelSpec_Term) Descriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ModelSpec_Term) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *ModelSpec_Term) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelSpec_Term) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelSpec_Term) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

// OK
type ModelSpec_Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" yaml:"id,omitempty"`
	Values []string                   `protobuf:"bytes,9,rep,name=values,proto3" json:"values,omitempty" toml:"values,omitempty" yaml:"values,omitempty"`
	Fields map[string]*structpb.Value `protobuf:"bytes,10,rep,name=fields,proto3" json:"fields,omitempty" toml:"fields,omitempty" yaml:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ModelSpec_Row) Reset() {
	*x = ModelSpec_Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datax_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelSpec_Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelSpec_Row) ProtoMessage() {}

func (x *ModelSpec_Row) ProtoReflect() protoreflect.Message {
	mi := &file_datax_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelSpec_Row.ProtoReflect.Descriptor instead.
func (*ModelSpec_Row) Descriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ModelSpec_Row) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ModelSpec_Row) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ModelSpec_Row) GetFields() map[string]*structpb.Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

type DataRead_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  DataRead_Filter_Type `protobuf:"varint,1,opt,name=type,proto3,enum=valuedig.datax.DataRead_Filter_Type" json:"type,omitempty" toml:"type,omitempty" yaml:"type,omitempty"`
	Name  string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" yaml:"name,omitempty"`
	Value string               `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty" toml:"value,omitempty" yaml:"value,omitempty"`
	Inner []*DataRead_Filter   `protobuf:"bytes,4,rep,name=inner,proto3" json:"inner,omitempty" toml:"inner,omitempty" yaml:"inner,omitempty"`
}

func (x *DataRead_Filter) Reset() {
	*x = DataRead_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datax_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataRead_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataRead_Filter) ProtoMessage() {}

func (x *DataRead_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_datax_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataRead_Filter.ProtoReflect.Descriptor instead.
func (*DataRead_Filter) Descriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{2, 0}
}

func (x *DataRead_Filter) GetType() DataRead_Filter_Type {
	if x != nil {
		return x.Type
	}
	return DataRead_Filter_UnSpec
}

func (x *DataRead_Filter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataRead_Filter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DataRead_Filter) GetInner() []*DataRead_Filter {
	if x != nil {
		return x.Inner
	}
	return nil
}

type DataRead_SortFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  DataRead_SortFilter_Type `protobuf:"varint,1,opt,name=type,proto3,enum=valuedig.datax.DataRead_SortFilter_Type" json:"type,omitempty" toml:"type,omitempty" yaml:"type,omitempty"`
	Field string                   `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty" toml:"field,omitempty" yaml:"field,omitempty"`
	Value *string                  `protobuf:"bytes,3,opt,name=value,proto3,oneof" json:"value" toml:"value" yaml:"value" json:"value,omitempty"`
}

func (x *DataRead_SortFilter) Reset() {
	*x = DataRead_SortFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datax_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataRead_SortFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataRead_SortFilter) ProtoMessage() {}

func (x *DataRead_SortFilter) ProtoReflect() protoreflect.Message {
	mi := &file_datax_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataRead_SortFilter.ProtoReflect.Descriptor instead.
func (*DataRead_SortFilter) Descriptor() ([]byte, []int) {
	return file_datax_proto_rawDescGZIP(), []int{2, 1}
}

func (x *DataRead_SortFilter) GetType() DataRead_SortFilter_Type {
	if x != nil {
		return x.Type
	}
	return DataRead_SortFilter_UnSpec
}

func (x *DataRead_SortFilter) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *DataRead_SortFilter) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

var File_datax_proto protoreflect.FileDescriptor

var file_datax_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x06, 0x0a, 0x09,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x72, 0x6f, 0x77, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x6f, 0x77, 0x73, 0x1a, 0xcd, 0x01, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x78, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0b, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x65, 0x72, 0x6d, 0x4e, 0x73, 0x1a, 0x5d, 0x0a, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xc3, 0x01, 0x0a, 0x03, 0x52, 0x6f, 0x77, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x70, 0x65, 0x63,
	0x2e, 0x52, 0x6f, 0x77, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x51, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x75, 0x0a, 0x09, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x49, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x49, 0x4e, 0x54, 0x10,
	0x03, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x59, 0x54, 0x45,
	0x53, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x08, 0x12, 0x08,
	0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x0b, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x52, 0x4d,
	0x10, 0x0c, 0x22, 0x50, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x78, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xe2, 0x04, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x3c, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x61, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x61, 0x64, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x1a, 0xc8, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x61, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x61, 0x64, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x23, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x52, 0x10, 0x02, 0x1a,
	0xac, 0x01, 0x0a, 0x0a, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3c,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x61, 0x64, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x22, 0x25, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45,
	0x53, 0x43, 0x10, 0x02, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x37, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x61, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x8a, 0x02, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x31, 0x0a, 0x06, 0x69, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64,
	0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a,
	0x06, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x06, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x12, 0x31, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x78, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x06, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x22, 0x69, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x6c, 0x65, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x98,
	0x01, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2d, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x12, 0x31, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x44, 0x61,
	0x74, 0x61, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x12, 0x34, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x64, 0x69, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x42, 0x2f,
	0x48, 0x03, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x64, 0x69, 0x67, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x75, 0x69, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x78, 0x3b, 0x64, 0x61, 0x74, 0x61, 0x78, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_datax_proto_rawDescOnce sync.Once
	file_datax_proto_rawDescData = file_datax_proto_rawDesc
)

func file_datax_proto_rawDescGZIP() []byte {
	file_datax_proto_rawDescOnce.Do(func() {
		file_datax_proto_rawDescData = protoimpl.X.CompressGZIP(file_datax_proto_rawDescData)
	})
	return file_datax_proto_rawDescData
}

var file_datax_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_datax_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_datax_proto_goTypes = []interface{}{
	(ModelSpec_FieldType)(0),      // 0: valuedig.datax.ModelSpec.FieldType
	(DataRead_Filter_Type)(0),     // 1: valuedig.datax.DataRead.Filter.Type
	(DataRead_SortFilter_Type)(0), // 2: valuedig.datax.DataRead.SortFilter.Type
	(*ModelSpec)(nil),             // 3: valuedig.datax.ModelSpec
	(*ModelSets)(nil),             // 4: valuedig.datax.ModelSets
	(*DataRead)(nil),              // 5: valuedig.datax.DataRead
	(*DataWrite)(nil),             // 6: valuedig.datax.DataWrite
	(*DataAction)(nil),            // 7: valuedig.datax.DataAction
	(*DataletSpec)(nil),           // 8: valuedig.datax.DataletSpec
	(*DataResult)(nil),            // 9: valuedig.datax.DataResult
	(*DataletResults)(nil),        // 10: valuedig.datax.DataletResults
	(*ModelSpec_Field)(nil),       // 11: valuedig.datax.ModelSpec.Field
	(*ModelSpec_Term)(nil),        // 12: valuedig.datax.ModelSpec.Term
	(*ModelSpec_Row)(nil),         // 13: valuedig.datax.ModelSpec.Row
	nil,                           // 14: valuedig.datax.ModelSpec.Row.FieldsEntry
	(*DataRead_Filter)(nil),       // 15: valuedig.datax.DataRead.Filter
	(*DataRead_SortFilter)(nil),   // 16: valuedig.datax.DataRead.SortFilter
	(*structpb.Value)(nil),        // 17: google.protobuf.Value
}
var file_datax_proto_depIdxs = []int32{
	11, // 0: valuedig.datax.ModelSpec.fields:type_name -> valuedig.datax.ModelSpec.Field
	13, // 1: valuedig.datax.ModelSpec.default_rows:type_name -> valuedig.datax.ModelSpec.Row
	3,  // 2: valuedig.datax.ModelSets.items:type_name -> valuedig.datax.ModelSpec
	15, // 3: valuedig.datax.DataRead.filter:type_name -> valuedig.datax.DataRead.Filter
	16, // 4: valuedig.datax.DataRead.sort:type_name -> valuedig.datax.DataRead.SortFilter
	15, // 5: valuedig.datax.DataWrite.filter:type_name -> valuedig.datax.DataRead.Filter
	5,  // 6: valuedig.datax.DataAction.search:type_name -> valuedig.datax.DataRead
	6,  // 7: valuedig.datax.DataAction.insert:type_name -> valuedig.datax.DataWrite
	6,  // 8: valuedig.datax.DataAction.update:type_name -> valuedig.datax.DataWrite
	6,  // 9: valuedig.datax.DataAction.upsert:type_name -> valuedig.datax.DataWrite
	6,  // 10: valuedig.datax.DataAction.delete:type_name -> valuedig.datax.DataWrite
	7,  // 11: valuedig.datax.DataletSpec.action:type_name -> valuedig.datax.DataAction
	3,  // 12: valuedig.datax.DataResult.spec:type_name -> valuedig.datax.ModelSpec
	13, // 13: valuedig.datax.DataResult.rows:type_name -> valuedig.datax.ModelSpec.Row
	9,  // 14: valuedig.datax.DataletResults.dataset:type_name -> valuedig.datax.DataResult
	9,  // 15: valuedig.datax.DataletResults.datasets:type_name -> valuedig.datax.DataResult
	0,  // 16: valuedig.datax.ModelSpec.Field.type:type_name -> valuedig.datax.ModelSpec.FieldType
	14, // 17: valuedig.datax.ModelSpec.Row.fields:type_name -> valuedig.datax.ModelSpec.Row.FieldsEntry
	17, // 18: valuedig.datax.ModelSpec.Row.FieldsEntry.value:type_name -> google.protobuf.Value
	1,  // 19: valuedig.datax.DataRead.Filter.type:type_name -> valuedig.datax.DataRead.Filter.Type
	15, // 20: valuedig.datax.DataRead.Filter.inner:type_name -> valuedig.datax.DataRead.Filter
	2,  // 21: valuedig.datax.DataRead.SortFilter.type:type_name -> valuedig.datax.DataRead.SortFilter.Type
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_datax_proto_init() }
func file_datax_proto_init() {
	if File_datax_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_datax_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datax_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datax_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datax_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datax_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datax_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataletSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datax_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datax_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataletResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datax_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelSpec_Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datax_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelSpec_Term); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datax_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelSpec_Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datax_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataRead_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datax_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataRead_SortFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_datax_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_datax_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_datax_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_datax_proto_goTypes,
		DependencyIndexes: file_datax_proto_depIdxs,
		EnumInfos:         file_datax_proto_enumTypes,
		MessageInfos:      file_datax_proto_msgTypes,
	}.Build()
	File_datax_proto = out.File
	file_datax_proto_rawDesc = nil
	file_datax_proto_goTypes = nil
	file_datax_proto_depIdxs = nil
}
